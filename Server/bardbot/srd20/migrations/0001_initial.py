# Generated by Django 3.2.11 on 2022-01-31 08:29

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Ability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('abbr', models.CharField(max_length=3)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'ability',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='CharacterClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('type', models.CharField(max_length=32)),
                ('alignment', models.CharField(max_length=128)),
                ('hit_die', models.CharField(max_length=4)),
                ('class_skills', models.TextField()),
                ('skill_points', models.CharField(max_length=1)),
                ('skill_points_ability', models.CharField(max_length=3)),
                ('spell_stat', models.CharField(blank=True, max_length=4)),
                ('proficiencies', models.TextField(blank=True)),
                ('spell_type', models.CharField(max_length=16)),
                ('epic_feat_base_level', models.CharField(max_length=4)),
                ('epic_feat_interval', models.CharField(max_length=4)),
                ('epic_feat_list', models.TextField(blank=True)),
                ('epic_full_text', models.TextField(blank=True)),
                ('req_race', models.CharField(blank=True, max_length=64)),
                ('req_weapon_proficiency', models.CharField(blank=True, max_length=64)),
                ('req_base_attack_bonus', models.CharField(blank=True, max_length=4)),
                ('req_skill', models.CharField(blank=True, max_length=128)),
                ('req_feat', models.CharField(blank=True, max_length=128)),
                ('req_spells', models.CharField(blank=True, max_length=128)),
                ('req_languages', models.CharField(blank=True, max_length=16)),
                ('req_psionics', models.CharField(blank=True, max_length=64)),
                ('req_epic_feat', models.CharField(blank=True, max_length=64)),
                ('req_special', models.CharField(blank=True, max_length=256)),
                ('spell_list_1', models.TextField(blank=True)),
                ('spell_list_2', models.CharField(blank=True, max_length=256)),
                ('spell_list_3', models.CharField(blank=True, max_length=256)),
                ('spell_list_4', models.CharField(blank=True, max_length=256)),
                ('spell_list_5', models.CharField(blank=True, max_length=256)),
                ('full_text', models.TextField()),
                ('reference', models.CharField(max_length=32)),
            ],
            options={
                'verbose_name_plural': 'character classes',
                'db_table': 'class',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Feat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('altname', models.SlugField(max_length=64)),
                ('type', models.CharField(max_length=32)),
                ('multiple', models.BooleanField()),
                ('stack', models.BooleanField()),
                ('choice', models.CharField(blank=True, max_length=256)),
                ('prerequisite', models.CharField(blank=True, max_length=1024)),
                ('benefit', models.TextField()),
                ('description', models.TextField(blank=True)),
                ('normal', models.TextField(blank=True)),
                ('special', models.TextField(blank=True)),
                ('reference', models.CharField(max_length=32)),
            ],
            options={
                'db_table': 'feat',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Monster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('altname', models.CharField(max_length=64)),
                ('flavor_text', models.TextField()),
                ('cr', models.IntegerField(choices=[(-4, '⅛'), (-3, '⅙'), (-2, '¼'), (-1, '⅓'), (0, '½'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10'), (11, '11'), (12, '12'), (13, '13'), (14, '14'), (15, '15'), (16, '16'), (17, '17'), (18, '18'), (19, '19'), (20, '20'), (21, '21'), (22, '22'), (23, '23'), (24, '24'), (25, '25'), (26, '26'), (27, '27'), (28, '28'), (29, '29'), (30, '30')])),
                ('xp', models.IntegerField()),
                ('alignment', models.CharField(max_length=4)),
                ('size', models.IntegerField(choices=[(-4, 'Fine'), (-3, 'Diminutive'), (-2, 'Tiny'), (-1, 'Small'), (0, 'Medium'), (1, 'Large'), (2, 'Huge'), (3, 'Gargantuan'), (4, 'Colossal')])),
                ('type', models.CharField(choices=[('aberration', 'Aberration'), ('animal', 'Animal'), ('construct', 'Construct'), ('dragon', 'Dragon'), ('fey', 'Fey'), ('humanoid', 'Humanoid'), ('magical beast', 'Magical beast'), ('monstrous humanoid', 'Monstrous humanoid'), ('ooze', 'Ooze'), ('outsider', 'Outsider'), ('plant', 'Plant'), ('undead', 'Undead'), ('vermin', 'Vermin')], max_length=32)),
                ('subtypes', models.CharField(blank=True, max_length=64)),
                ('other_type', models.CharField(blank=True, max_length=64)),
                ('class_level', models.CharField(blank=True, max_length=16)),
                ('initiative', models.IntegerField()),
                ('senses', models.CharField(blank=True, max_length=512)),
                ('aura', models.CharField(blank=True, max_length=256)),
                ('armor_class', models.CharField(max_length=256)),
                ('hit_points', models.CharField(max_length=256)),
                ('fortitude_save', models.CharField(max_length=256)),
                ('reflex_save', models.CharField(max_length=128)),
                ('will_save', models.CharField(max_length=256)),
                ('defensive_abilities', models.CharField(blank=True, max_length=512)),
                ('damage_reduction_amount', models.PositiveIntegerField(default=0)),
                ('damage_reduction_condition', models.CharField(blank=True, max_length=128)),
                ('immunities', models.CharField(blank=True, max_length=1024)),
                ('resistance', models.CharField(blank=True, max_length=256)),
                ('spell_resistance', models.PositiveIntegerField(default=0)),
                ('weaknesses', models.CharField(blank=True, max_length=256)),
                ('speed', models.CharField(blank=True, max_length=128)),
                ('melee', models.CharField(blank=True, max_length=512)),
                ('ranged', models.CharField(blank=True, max_length=256)),
                ('space', models.DecimalField(decimal_places=2, max_digits=6, null=True)),
                ('reach', models.CharField(blank=True, max_length=128)),
                ('special_attacks', models.TextField(blank=True)),
                ('spell_like_abilities', models.TextField(blank=True)),
                ('spells_known', models.TextField(blank=True)),
                ('sorcerer_spells_known', models.TextField(blank=True)),
                ('spells_prepared', models.TextField(blank=True)),
                ('opposition_schools', models.CharField(blank=True, max_length=64)),
                ('strength', models.IntegerField()),
                ('dexterity', models.IntegerField()),
                ('constitution', models.IntegerField()),
                ('intelligence', models.IntegerField()),
                ('wisdom', models.IntegerField()),
                ('charisma', models.IntegerField()),
                ('base_attack_bonus', models.IntegerField()),
                ('combat_maneuver_bonus', models.CharField(max_length=64)),
                ('combat_maneuver_defense', models.CharField(max_length=64)),
                ('feats', models.TextField(blank=True)),
                ('skills', models.TextField(blank=True)),
                ('racial_modifiers', models.CharField(blank=True, max_length=512)),
                ('languages', models.TextField(blank=True)),
                ('special_qualities', models.CharField(blank=True, max_length=512)),
                ('gear', models.CharField(blank=True, max_length=128)),
                ('environment', models.CharField(max_length=256)),
                ('organization', models.TextField()),
                ('treasure', models.TextField(blank=True)),
                ('abilities', models.TextField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('reference', models.CharField(max_length=64)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Spell',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Complete spell name. Use proper capitalization, and put the base name of the spell at the front, i.e. "Heal, Mass" instead of "Mass Heal".', max_length=64)),
                ('altname', models.SlugField(help_text='URL version of the name; use only alphanumeric char, dashes and keep the text in lowercase except for roman numerals.', max_length=64)),
                ('school', models.CharField(help_text='School of magic, for example "Illusion"', max_length=32)),
                ('subschool', models.CharField(blank=True, help_text='Subschool of the magic school, if any. Example: "Figment"', max_length=128)),
                ('descriptor', models.CharField(blank=True, help_text='Descriptor list (comma separated). Example "Fire, Chaos"', max_length=256)),
                ('spellcraft_dc', models.CharField(blank=True, help_text='DC to cast (epic spells)', max_length=64, verbose_name='Spellcraft DC')),
                ('level', models.CharField(blank=True, help_text='Comma separated list of Class lvl. Example: "Bard 3, Sor/Wiz 4"', max_length=128)),
                ('components', models.CharField(help_text='Comma separated list,as shown in spell. Example: "V, S, M/DF, XP"', max_length=256)),
                ('casting_time', models.CharField(max_length=64)),
                ('range', models.CharField(max_length=64)),
                ('target', models.CharField(blank=True, max_length=256)),
                ('area', models.CharField(blank=True, max_length=256)),
                ('effect', models.CharField(blank=True, max_length=256)),
                ('duration', models.CharField(max_length=128)),
                ('saving_throw', models.CharField(max_length=256)),
                ('spell_resistance', models.CharField(max_length=64)),
                ('short_description', models.CharField(help_text='Short description shown in spell lists', max_length=256)),
                ('to_develop', models.TextField(blank=True, help_text='Cost to develop epic spell')),
                ('material_components', models.TextField(blank=True)),
                ('arcane_material_components', models.CharField(blank=True, max_length=256)),
                ('focus', models.TextField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('xp_cost', models.TextField(blank=True)),
                ('arcane_focus', models.CharField(blank=True, max_length=256)),
                ('verbal_components', models.CharField(blank=True, max_length=256)),
                ('cleric_focus', models.CharField(blank=True, max_length=256)),
                ('druid_focus', models.CharField(blank=True, max_length=256)),
                ('reference', models.CharField(help_text='Book containing the spell and pag. Example: "SpC 31"', max_length=30)),
            ],
            options={
                'db_table': 'spell',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('untrained', models.BooleanField(default=True)),
                ('ac_penalty', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True, default='', null=True)),
                ('ability', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='srd20.ability')),
            ],
        ),
        migrations.CreateModel(
            name='Race',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('size', models.CharField(max_length=32)),
                ('speed', models.IntegerField()),
                ('skills', models.ManyToManyField(to='srd20.Skill')),
            ],
        ),
        migrations.CreateModel(
            name='MonsterAbility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('kind', models.CharField(choices=[('sp', 'Spell-Like'), ('su', 'Supernatural'), ('ex', 'Extraordinary')], max_length=2)),
                ('description', models.TextField()),
                ('monster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='srd20.monster')),
            ],
        ),
    ]
